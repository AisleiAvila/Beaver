/*
 * This file is generated by jOOQ.
 */
package com.dasad.empresa.jooq.tables.records;


import com.dasad.empresa.jooq.tables.CategoriaEquipamentos;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Equipamentos necessários para cada categoria de serviço
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CategoriaEquipamentosRecord extends UpdatableRecordImpl<CategoriaEquipamentosRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.categoria_equipamentos.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.categoria_equipamentos.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.categoria_equipamentos.categoria_id</code>.
     */
    public void setCategoriaId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.categoria_equipamentos.categoria_id</code>.
     */
    public Integer getCategoriaId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.categoria_equipamentos.nome_equipamento</code>.
     */
    public void setNomeEquipamento(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.categoria_equipamentos.nome_equipamento</code>.
     */
    public String getNomeEquipamento() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.categoria_equipamentos.descricao</code>.
     */
    public void setDescricao(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.categoria_equipamentos.descricao</code>.
     */
    public String getDescricao() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.categoria_equipamentos.obrigatorio</code>.
     */
    public void setObrigatorio(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.categoria_equipamentos.obrigatorio</code>.
     */
    public Boolean getObrigatorio() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.categoria_equipamentos.data_criacao</code>.
     */
    public void setDataCriacao(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.categoria_equipamentos.data_criacao</code>.
     */
    public LocalDateTime getDataCriacao() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.categoria_equipamentos.data_atualizacao</code>.
     */
    public void setDataAtualizacao(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.categoria_equipamentos.data_atualizacao</code>.
     */
    public LocalDateTime getDataAtualizacao() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoriaEquipamentosRecord
     */
    public CategoriaEquipamentosRecord() {
        super(CategoriaEquipamentos.CATEGORIA_EQUIPAMENTOS);
    }

    /**
     * Create a detached, initialised CategoriaEquipamentosRecord
     */
    public CategoriaEquipamentosRecord(Integer id, Integer categoriaId, String nomeEquipamento, String descricao, Boolean obrigatorio, LocalDateTime dataCriacao, LocalDateTime dataAtualizacao) {
        super(CategoriaEquipamentos.CATEGORIA_EQUIPAMENTOS);

        setId(id);
        setCategoriaId(categoriaId);
        setNomeEquipamento(nomeEquipamento);
        setDescricao(descricao);
        setObrigatorio(obrigatorio);
        setDataCriacao(dataCriacao);
        setDataAtualizacao(dataAtualizacao);
        resetChangedOnNotNull();
    }
}
