/*
 * This file is generated by jOOQ.
 */
package com.dasad.empresa.jooq.tables.records;


import com.dasad.empresa.jooq.tables.PrecosRegionais;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Preços diferenciados por região para cada subcategoria
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PrecosRegionaisRecord extends UpdatableRecordImpl<PrecosRegionaisRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.precos_regionais.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.precos_regionais.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.precos_regionais.subcategoria_id</code>.
     */
    public void setSubcategoriaId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.precos_regionais.subcategoria_id</code>.
     */
    public Integer getSubcategoriaId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.precos_regionais.regiao_id</code>.
     */
    public void setRegiaoId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.precos_regionais.regiao_id</code>.
     */
    public Integer getRegiaoId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.precos_regionais.preco_base</code>.
     */
    public void setPrecoBase(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.precos_regionais.preco_base</code>.
     */
    public BigDecimal getPrecoBase() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.precos_regionais.preco_minimo</code>.
     */
    public void setPrecoMinimo(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.precos_regionais.preco_minimo</code>.
     */
    public BigDecimal getPrecoMinimo() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.precos_regionais.preco_maximo</code>.
     */
    public void setPrecoMaximo(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.precos_regionais.preco_maximo</code>.
     */
    public BigDecimal getPrecoMaximo() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.precos_regionais.data_criacao</code>.
     */
    public void setDataCriacao(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.precos_regionais.data_criacao</code>.
     */
    public LocalDateTime getDataCriacao() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.precos_regionais.data_atualizacao</code>.
     */
    public void setDataAtualizacao(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.precos_regionais.data_atualizacao</code>.
     */
    public LocalDateTime getDataAtualizacao() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PrecosRegionaisRecord
     */
    public PrecosRegionaisRecord() {
        super(PrecosRegionais.PRECOS_REGIONAIS);
    }

    /**
     * Create a detached, initialised PrecosRegionaisRecord
     */
    public PrecosRegionaisRecord(Integer id, Integer subcategoriaId, Integer regiaoId, BigDecimal precoBase, BigDecimal precoMinimo, BigDecimal precoMaximo, LocalDateTime dataCriacao, LocalDateTime dataAtualizacao) {
        super(PrecosRegionais.PRECOS_REGIONAIS);

        setId(id);
        setSubcategoriaId(subcategoriaId);
        setRegiaoId(regiaoId);
        setPrecoBase(precoBase);
        setPrecoMinimo(precoMinimo);
        setPrecoMaximo(precoMaximo);
        setDataCriacao(dataCriacao);
        setDataAtualizacao(dataAtualizacao);
        resetChangedOnNotNull();
    }
}
